@model List<CapstoneProject.Models.ClassLibrary.Project>
@{
    ViewData["Title"] = "Manage Projects";
    Layout = "_ClientLayout";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/GridView.css" asp-append-version="true" />
    <style>
        table th.sortable {
            cursor: pointer;
            text-decoration: underline;
        }

            /* Hover effect specifically for sortable headers */
            table th.sortable:hover {
                color: #A50034;
                background-color: #f0f0f0;
                text-decoration: underline;
            }

        /* Sort icon styling */
        .sort-icon {
            display: inline-block; /* Isolates the icon from inheriting text underline */
            margin-left: 5px;
            font-size: 0.9em;
            color: inherit; /* Matches the text color by default */
            text-decoration: none;
        }

        .sort-asc::after {
            content: "▲"; /* Up arrow */
            text-decoration: none;
        }

        .sort-desc::after {
            content: "▼"; /* Down arrow */
            text-decoration: none;
        }

        .btn-success {
            background-color: #198754;
            border: none;
        }
        /* Ensure the icon matches text color on hover */
        table th.sortable:hover .sort-icon {
            color: #A50034;
            text-decoration: none;
        }
    </style>
</head>

<div class="container mt-5">
    <h3 class="text-center mb-4">Admin Manage Projects</h3>

    <div class="row">
        <div class="col-lg-12">
            <div class="table-responsive">
                <table id="projectsTable" class="table table-striped table-hover shadow-sm">
                    <thead>
                        <tr>
                            <th class="sortable" onclick="sortProjectsTable(0)">Name <span class="sort-icon sort-asc" id="sort-icon-projects-0"></span></th>
                            <th>Short Description</th>
                            <th class="sortable" onclick="sortProjectsTable(2)">Project Status <span class="sort-icon" id="sort-icon-projects-2"></th>
                            <th class="sortable" onclick="sortProjectsTable(3)">Date Submitted <span class="sort-icon" id="sort-icon-projects-3"></span></th>
                            <th>View Project</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Iterate Database data into table rows *@
                        @* Check if there are any projects to display *@
                        @if (ViewBag.AdminViewProjects == null || ViewBag.AdminViewProjects.Count == 0)
                        {
                            <tr>
                                <td colspan="5" class="text-center">There are no projects</td>
                            </tr>
                        }
                        @foreach (var project in ViewBag.AdminViewProjects)
                        {
                            <tr>
                                <td data-value="@project.ProjectName">@project.ProjectName</td>
                                <td data-value="@project.ShortDesc">@project.ShortDesc</td>
                                <td data-value="@project.ProjectStatus">
                                    @* Conditionally set Bootstrap button styles based on project status *@
                                    @{
                                        string statusClass = project.ProjectStatus switch
                                        {
                                            "Approved" => "btn btn-success",
                                            "Rejected" => "btn btn-danger",
                                            "Pending" => "btn btn-warning"
                                        };
                                    }
                                    <span class="@statusClass">@project.ProjectStatus</span>
                                </td>
                                <td data-value="@project.DateSubmitted.ToString(" MM /dd/yyyy")">@project.DateSubmitted.ToString(" MM /dd/yyyy")</td>
                                <td><a class="btn btn-primary" asp-area="" asp-controller="AdminProject" asp-action="ViewAProject" asp-route-ProjectID="@project.ProjectID">View Details</a></td>

                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

<script>
    let projectsSortOrder = {};

    function sortProjectsTable(columnIndex) {
        const table = document.getElementById("projectsTable");
        const rows = Array.from(table.rows).slice(1);

        const direction = projectsSortOrder[columnIndex] === "asc" ? "desc" : "asc";
        projectsSortOrder[columnIndex] = direction;

        document.querySelectorAll("#projectsTable .sort-icon").forEach(icon => {
            icon.classList.remove("sort-asc", "sort-desc");
        });

        const currentIcon = document.getElementById(`sort-icon-projects-${columnIndex}`);
        if (currentIcon) {
            currentIcon.classList.add(direction === "asc" ? "sort-asc" : "sort-desc");
        }

        rows.sort((a, b) => {
            const aValue = a.cells[columnIndex].getAttribute("data-value").toLowerCase();
            const bValue = b.cells[columnIndex].getAttribute("data-value").toLowerCase();
            return direction === "asc" ? (aValue > bValue ? 1 : -1) : (aValue < bValue ? 1 : -1);
        });

        const tbody = table.querySelector("tbody");
        tbody.innerHTML = "";
        rows.forEach(row => tbody.appendChild(row));



    }
    // Sort the projects and profiles tables by the first column on page load
    window.onload = function () {
        sortProjectsTable(0); // Sort projects table by the first column (Name) in ascending order
    };
</script>